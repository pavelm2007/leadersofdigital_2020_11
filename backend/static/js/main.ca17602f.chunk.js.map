{"version":3,"sources":["components/Headers/PageHeader/index.tsx","components/Headers/SectionHeader/index.tsx","components/Headers/ColHeader/index.tsx","components/Headers/ColHeader/ColHeader.tsx","constants.tsx","components/Charts/LineCharts/LineCharts.tsx","components/Сompetencies/CompenetceSelect/CompetenceSelect.tsx","api/index.ts","components/Tables/TrendTable/icons/DownTrendIcon.svg","components/Tables/TrendTable/icons/UpTrendIcon.svg","components/Tables/TrendTable/TrendTable.tsx","components/Tables/TrendTable/utils.ts","App.tsx","components/Charts/LineCharts/utils.ts","reportWebVitals.ts","index.tsx"],"names":["Header","className","SectionHeader","title","ColHeader","trendUp","trendDown","initLineChartData","Array","LineChart","data","series","React","useMemo","showPoints","axes","primary","type","position","chartData","grouping","dataType","style","width","height","tooltip","animatedComponents","makeAnimated","CompetenceSelect","options","label","isMulti","defaultValue","closeMenuOnSelect","components","fetchPopularityProfession","trend","fetch","then","json","initTrendTableData","TrendTable","items","map","item","i","key","src","UpTrendIcon","DownTrendIcon","alt","value","renderRow","getTrendTableData","directionTrend","result","forEach","index","push","competenceOptions","App","useState","setError","setIsLoaded","dynamicsProfession","setDynamicsProfession","trendUpProfession","setTrendUpProfession","trendDownProfession","setTrendDownProfession","useEffect","headers","labelKey","shift","headerKey","parseInt","getDynamicsProfessionData","error","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca17602f.chunk.js","sourcesContent":["import React from \"react\";\nimport './PageHeader.css'\n\ninterface IHeader {\n\n}\n\nconst Header: React.FunctionComponent<IHeader> = () => {\n    return (\n        <div className={'container-fluid header__wrapper u-mb-100'}>\n            <div className={'row'}>\n                <div className={'container'}>\n                    <div className={'col-12 u-mt-150 u-mb-150'}>\n                        <p className={'header__title text-center'}>\n                            топ-10 специальностей в сфере IT, <br/>\n                            на которые будет спрос в ближайшие 2-3 года\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport './SectionHeader.css'\n\ninterface ISectionHeader {\n    title: string\n}\n\nconst SectionHeader: React.FunctionComponent<ISectionHeader> = ({title}) => {\n    return (\n        <div className={'container-fluid section__wrapper'}>\n            <div className={'row'}>\n                <div className={'container'}>\n                    <div className={'col-12 u-mt-15 u-mb-15'}>\n                        <p className={'section__title u-fs-22 u-color-green u-text-upper text-center'}>\n                            {title}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SectionHeader;","import ColHeader from \"./ColHeader\";\n\nexport default ColHeader\n","import React from \"react\";\nimport './ColHeader.css'\n\ninterface IColHeader {\n    title: string\n}\n\nconst ColHeader: React.FunctionComponent<IColHeader> = ({title}) => {\n    return (\n        <div className={'col-header__wrapper u-bg-green col-12 u-mt-15 u-mb-15'}>\n            <p className={'col-header__title u-m-0 u-pt-15 u-pb-15 u-fs-18 u-color-white u-text-upper'}>\n                {title}\n            </p>\n        </div>\n    );\n}\n\nexport default ColHeader;","export const trendUp = 'up'\nexport const trendDown = 'down'","import React from \"react\";\nimport {Chart} from \"react-charts\";\nimport useDemoConfig from \"./useDemoConfig\";\nimport './LineCharts.css'\n\nexport interface ILineChartDataItem {\n    primary: string,\n    secondary: number\n}\n\nexport interface ILineChartData {\n    data: ILineChartDataItem[]\n    label: string\n}\n\nexport const initLineChartData = new Array()\n\ninterface ILineChart {\n    data: ILineChartData[]\n}\n\nconst LineChart: React.FunctionComponent<ILineChart> = ({data}) => {\n    const series = React.useMemo(\n        () => ({\n            showPoints: true\n        }),\n        []\n    )\n    const axes = React.useMemo(\n        () => [\n            {primary: true, type: 'ordinal', position: 'bottom'},\n            {type: 'linear', position: 'left'}\n        ],\n        []\n    )\n\n    const chartData = {\n        data,\n        grouping: 'primary',\n        dataType: 'ordinal',\n    }\n\n\n    return (\n        <div className={'container'}>\n            <div style={{width: '100%', height: '350px'}}>\n                <Chart {...chartData} series={series} axes={axes} tooltip/>\n            </div>\n        </div>\n    );\n}\n\nexport default LineChart;","import React from \"react\";\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\nimport {inspect} from \"util\";\n\n\ninterface ICompetenceSelect {\n    label?: string\n    options: any[]\n    defaultValue?: any[]\n    isMulti?: boolean\n}\n\nconst animatedComponents = makeAnimated();\n\nconst CompetenceSelect: React.FunctionComponent<ICompetenceSelect> = (\n    {\n        options,\n        label,\n        isMulti = false,\n        defaultValue\n    }) => {\n\n    return (\n        <div className={'competence-select'}>\n            {\n                !!label &&\n                <div className={'competence-select__title u-mb-10 u-color-black u-fs-20 u-font-bold'}>{label}</div>\n            }\n\n            <Select\n                closeMenuOnSelect={false}\n                components={animatedComponents}\n                defaultValue={defaultValue}\n                isMulti={isMulti}\n                options={options}\n            />\n        </div>\n    );\n}\n\nexport default CompetenceSelect","export const fetchDynamicsProfession = () => {\n  return fetch('//0.0.0.0:5000/api/v1/professions/dynamic/')\n    .then(data => data.json())\n}\n\nexport const fetchPopularityProfession = (trend) => {\n  return fetch(`//0.0.0.0:5000/api/v1/professions/popularity/?trend=${trend}`)\n    .then(data => data.json())\n}","export default __webpack_public_path__ + \"static/media/DownTrendIcon.e51276a3.svg\";","export default __webpack_public_path__ + \"static/media/UpTrendIcon.1680ea48.svg\";","import React from \"react\";\nimport DownTrendIcon from './icons/DownTrendIcon.svg'\nimport UpTrendIcon from './icons/UpTrendIcon.svg'\nimport {trendDown, trendUp} from \"../../../constants\";\n\nexport interface ITrendTableRow {\n    trend: string\n    title: string\n    value: number\n}\n\nexport interface ITrendTable {\n    items: ITrendTableRow[]\n}\n\nexport const initTrendTableData = new Array()\n\nconst TrendTable: React.FunctionComponent<ITrendTable> = ({items}) => {\n    const getTrendIcon = (trend: string) => {\n        if (trend === trendUp) {\n            return UpTrendIcon\n        } else if (trend === trendDown){\n            return DownTrendIcon\n        }\n    }\n    const renderRow = (item: any, key: number) => {\n        return (\n            <tr key={key}>\n                <th><img src={getTrendIcon(item.trend)} alt=''/></th>\n                <td>{item.title}</td>\n                <td>{item.value}</td>\n            </tr>\n        )\n    }\n\n    return (\n        <table className=\"table table-striped\">\n            <thead>\n            <tr>\n                <th>&nbsp;</th>\n                <th>Специальность</th>\n                <th>Изменение</th>\n            </tr>\n            </thead>\n            <tbody>\n            {items.map((item, i) => renderRow(item, i))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default TrendTable;","import {trendDown, trendUp} from \"../../../constants\";\n\nexport const getTrendTableData = ({trend, items}) => {\n    const directionTrend = trend == trendUp ? trendUp : trendDown\n    const result = new Array()\n    items.forEach((item, index) => {\n        result.push({trend: directionTrend, title: item.label, value: item.value})\n    });\n    return result\n}","import React, {useState, useEffect} from 'react';\nimport {ColHeader, PageHeader, SectionHeader} from \"./components/Headers\";\nimport './App.css'\nimport {trendDown, trendUp} from \"./constants\";\nimport {LineChart} from \"./components/Charts\";\nimport {CompetenceSelect} from \"./components/Сompetencies\";\nimport {fetchDynamicsProfession, fetchPopularityProfession} from './api';\nimport {ILineChartData, initLineChartData} from \"./components/Charts/LineCharts/LineCharts\";\nimport {getDynamicsProfessionData} from \"./components/Charts/LineCharts/utils\";\nimport TrendTable, {initTrendTableData, ITrendTableRow} from \"./components/Tables/TrendTable/TrendTable\";\nimport {getTrendTableData} from \"./components/Tables/TrendTable/utils\";\n\nconst competenceOptions = [\n    {value: 'chocolate', label: 'Chocolate'},\n    {value: 'strawberry', label: 'Strawberry'},\n    {value: 'vanilla', label: 'Vanilla'}\n]\n\nfunction App() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [dynamicsProfession, setDynamicsProfession] = useState<ILineChartData[]>(initLineChartData);\n    const [trendUpProfession, setTrendUpProfession] = useState<ITrendTableRow[]>(initTrendTableData);\n    const [trendDownProfession, setTrendDownProfession] = useState<ITrendTableRow[]>(initTrendTableData);\n\n    useEffect(() => {\n        fetchDynamicsProfession()\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setDynamicsProfession(getDynamicsProfessionData(result));\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n        fetchPopularityProfession(trendUp).then(\n            (result) => {\n                setIsLoaded(true)\n                setTrendUpProfession(getTrendTableData({trend: trendUp, items: result}))\n            },\n            (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n        )\n        fetchPopularityProfession(trendDown).then(\n            (result) => {\n                setIsLoaded(true)\n                setTrendDownProfession(getTrendTableData({trend: trendDown, items: result}))\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n        )\n    }, [])\n\n    const upTrendTableItems = [\n        {trend: trendUp, title: 'python', value: 93.5},\n        {trend: trendUp, title: 'React', value: 93.5},\n        {trend: trendUp, title: 'Vue', value: 93.5}\n    ]\n    const downTrendTableItems = [\n        {trend: trendDown, title: 'python', value: 93.5},\n        {trend: trendDown, title: 'React', value: 93.5},\n        {trend: trendDown, title: 'Vue', value: 93.5}\n    ]\n    return (\n        <React.Fragment>\n            <PageHeader/>\n            <section className={'u-mb-15'}>\n                <SectionHeader title={'Прогноз изменения спроса на профессии в России'}/>\n                <div className={'row'}>\n                    <div className={'col-12'}>\n                        <div className={'u-mb-50'}/>\n                        <LineChart data={dynamicsProfession}/>\n                        <div className={'u-mb-50'}/>\n                    </div>\n                </div>\n            </section>\n            <section className={'u-mb-15'}>\n                <SectionHeader title={'Данные за исследуемый период'}/>\n                <div className={'u-mb-50'}/>\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <div className={'col-6'}>\n                            <ColHeader title={'Наиболее популярные профессии'}/>\n                            <div className={'u-mb-30'}/>\n                            <TrendTable key={trendUp} items={trendUpProfession}/>\n                        </div>\n                        <div className={'col-6'}>\n                            <ColHeader title={'Уходящие профессии'}/>\n                            <div className={'u-mb-30'}/>\n                            <TrendTable key={trendDown} items={trendDownProfession}/>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className={'u-mb-15'}>\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <SectionHeader title={'Ключевые компетенции'}/>\n                        <div className={'col-12'}>\n                            <CompetenceSelect\n                                label={'Профессии'}\n                                defaultValue={[competenceOptions[0], competenceOptions[1]]}\n                                isMulti={true}\n                                options={competenceOptions}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className={'u-mb-15'}>\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <div className={'col-12'}>\n                            <CompetenceSelect\n                                label={'Регион'}\n                                options={[\n                                    {value: 'chocolate', label: 'Chocolate'},\n                                    {value: 'strawberry', label: 'Strawberry'},\n                                    {value: 'vanilla', label: 'Vanilla'}\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className={'u-mb-15'}>\n                <SectionHeader title={'Сравнение результатов'}/>\n            </section>\n        </React.Fragment>\n\n    );\n}\n\nexport default App;\n","export const getDynamicsProfessionData = ({headers, items}) => {\n    let result = new Array()\n    const labelKey = headers.shift()\n    items.forEach((item, index) => {\n        let data = headers.map((headerKey: string) => ([headerKey, parseInt(item[headerKey])]))\n        let label = item[labelKey]\n        result.push({label: label, data: data})\n    });\n    return result\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}